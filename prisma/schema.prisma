generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Racha {
  id                  String               @id @default(cuid())
  nome                String
  ativo               Boolean              @default(true)
  atualizadoEm        DateTime             @updatedAt
  criadoEm            DateTime             @default(now())
  descricao           String?
  logoUrl             String?
  cidade              String?
  estado              String?
  ownerId             String
  regras              String?
  slug                String               @unique
  tema                String?
  financeiroVisivel   Boolean              @default(false)
  autoAprovarAtletas  Boolean              @default(false)
  planoId             String?
  status              RachaStatus          @default(ATIVO)
  logs                AdminLog[]
  campanhas           Campanha[]
  campeoes            Campeao[]
  financeiros         Financeiro[]
  influencerCupomUsos InfluencerCupomUso[]
  partidas            Partida[]
  patrocinadores      Patrocinador[]
  owner               Usuario              @relation("RachasOwner", fields: [ownerId], references: [id])
  plano               Plano?               @relation(fields: [planoId], references: [id])
  admins              RachaAdmin[]
  jogadores           RachaJogador[]
  tickets             Ticket[]
  times               Time[]
  solicitacoes        Solicitacao[]

  @@index([ownerId])
  @@index([status])
  @@index([ativo])
}

model Time {
  id            String   @id @default(cuid())
  nome          String
  slug          String   @unique
  escudoUrl     String?
  corPrincipal  String?
  corSecundaria String?
  rachaId       String
  jogadores     String?
  criadoEm      DateTime @default(now())
  atualizadoEm  DateTime @updatedAt
  racha         Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
}

model RachaAdmin {
  id        String   @id @default(cuid())
  rachaId   String
  usuarioId String
  criadoEm  DateTime @default(now())
  role      String
  status    String   @default("ativo")
  racha     Racha    @relation(fields: [rachaId], references: [id])
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])

  @@unique([rachaId, usuarioId])
  @@index([rachaId])
  @@index([usuarioId])
}

model Patrocinador {
  id           String   @id @default(cuid())
  nome         String
  logo         String
  link         String
  prioridade   Int      @default(1)
  status       String   @default("ativo")
  descricao    String?
  rachaId      String
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  racha        Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([status])
}

model Campeao {
  id           String   @id @default(cuid())
  rachaId      String
  nome         String
  categoria    String
  data         DateTime
  descricao    String?
  jogadores    String?
  imagem       String?
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  racha        Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([data])
  @@index([categoria])
}

model Partida {
  id           String   @id @default(cuid())
  rachaId      String
  data         DateTime
  horario      String
  local        String?
  timeA        String
  timeB        String
  golsTimeA    Int      @default(0)
  golsTimeB    Int      @default(0)
  jogadoresA   String
  jogadoresB   String
  destaquesA   String?
  destaquesB   String?
  finalizada   Boolean  @default(false)
  criadoEm     DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  racha        Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId, data])
  @@index([finalizada])
}

model RachaJogador {
  id        String  @id @default(cuid())
  rachaId   String
  jogadorId String
  jogador   Jogador @relation(fields: [jogadorId], references: [id])
  racha     Racha   @relation(fields: [rachaId], references: [id])

  @@unique([rachaId, jogadorId])
  @@index([rachaId])
  @@index([jogadorId])
}

// Solicitações de jogadores para entrar no racha (fluxo de aprovação)
model Solicitacao {
  id        String   @id @default(cuid())
  rachaId   String
  nome      String
  apelido   String?
  email     String
  posicao   String
  fotoUrl   String?
  mensagem  String?
  status    String   @default("PENDENTE") // PENDENTE | APROVADA | REJEITADA
  criadoEm  DateTime @default(now())
  atualizadoEm DateTime @updatedAt
  racha     Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([status])
}

model Usuario {
  id                   String                @id @default(cuid())
  nome                 String
  apelido              String
  email                String                @unique
  senhaHash            String?
  createdAt            DateTime              @default(now())
  role                 Role                  @default(ATLETA)
  status               String                @default("ativo")
  logs                 AdminLog[]            @relation("AdminLogs")
  financeiros          Financeiro[]
  influencerCupomUsos  InfluencerCupomUso[]
  influencerPagamentos InfluencerPagamento[] @relation("PagamentosFeitos")
  influencerVendas     InfluencerVenda[]
  rachasDono           Racha[]               @relation("RachasOwner")
  rachasAdmin          RachaAdmin[]
  tickets              Ticket[]
  ticketRespostas      TicketResposta[]
  resetTokens          PasswordResetToken[]

  @@index([role])
  @@index([status])
}

model Jogador {
  id         String         @id @default(cuid())
  nome       String
  posicao    String
  foto       String?
  apelido    String
  createdAt  DateTime       @default(now())
  email      String         @unique
  mensalista Boolean        @default(false)
  status     String         @default("ativo")
  updatedAt  DateTime       @updatedAt
  rachas     RachaJogador[]

  @@index([status])
}

model AdminLog {
  id       String   @id @default(cuid())
  rachaId  String
  adminId  String
  acao     String
  detalhes String?
  criadoEm DateTime @default(now())
  admin    Usuario  @relation("AdminLogs", fields: [adminId], references: [id])
  racha    Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([adminId])
  @@index([acao])
}

model Financeiro {
  id        String   @id @default(cuid())
  rachaId   String
  adminId   String
  tipo      String
  categoria String
  valor     Float
  descricao String?
  data      DateTime
  criadoEm  DateTime @default(now())
  admin     Usuario  @relation(fields: [adminId], references: [id])
  racha     Racha    @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([adminId])
  @@index([data])
  @@index([categoria])
  @@index([tipo])
}

model Plano {
  id         String  @id @default(cuid())
  nome       String
  valor      Float
  features   String?
  maxAtletas Int
  maxAdmins  Int
  rachas     Racha[]
}

model Ticket {
  id        String           @id @default(cuid())
  assunto   String
  descricao String?
  status    String           @default("aberto")
  criadoEm  DateTime         @default(now())
  usuarioId String?
  rachaId   String?
  racha     Racha?           @relation(fields: [rachaId], references: [id])
  usuario   Usuario?         @relation(fields: [usuarioId], references: [id])
  respostas TicketResposta[]

  @@index([usuarioId])
  @@index([rachaId])
  @@index([status])
}

model TicketResposta {
  id        String   @id @default(cuid())
  ticketId  String
  usuarioId String?
  mensagem  String
  criadoEm  DateTime @default(now())
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  usuario   Usuario? @relation(fields: [usuarioId], references: [id])

  @@index([ticketId])
  @@index([usuarioId])
}

model Campanha {
  id       String   @id @default(cuid())
  nome     String
  codigo   String
  tipo     String
  uso      Int      @default(0)
  validade DateTime
  status   String   @default("ativo")
  rachaId  String?
  racha    Racha?   @relation(fields: [rachaId], references: [id])

  @@index([rachaId])
  @@index([codigo])
  @@index([status])
}

model Influencer {
  id             String                @id @default(cuid())
  nome           String
  cpf            String                @unique
  instagram      String?
  youtube        String?
  tiktok         String?
  outros         String?
  cupom          String                @unique
  status         String                @default("ativo")
  saldoAcumulado Float                 @default(0)
  saldoPago      Float                 @default(0)
  criadoEm       DateTime              @default(now())
  cupomUsos      InfluencerCupomUso[]
  pagamentos     InfluencerPagamento[] @relation("PagamentosRecebidos")
  vendas         InfluencerVenda[]

  @@index([status])
}

model InfluencerVenda {
  id           String     @id @default(cuid())
  influencerId String
  usuarioId    String
  valor        Float
  desconto     Float
  dataCadastro DateTime   @default(now())
  status       String     @default("pendente")
  pagoEm       DateTime?
  influencer   Influencer @relation(fields: [influencerId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@index([influencerId])
  @@index([usuarioId])
  @@index([status])
}

model InfluencerPagamento {
  id            String     @id @default(cuid())
  influencerId  String
  valor         Float
  dataPagamento DateTime   @default(now())
  observacao    String?
  adminId       String
  admin         Usuario    @relation("PagamentosFeitos", fields: [adminId], references: [id])
  influencer    Influencer @relation("PagamentosRecebidos", fields: [influencerId], references: [id])

  @@index([influencerId])
  @@index([adminId])
}

model InfluencerCupomUso {
  id           String     @id @default(cuid())
  influencerId String
  usuarioId    String
  rachaId      String
  dataCadastro DateTime   @default(now())
  status       String     @default("trial")
  influencer   Influencer @relation(fields: [influencerId], references: [id])
  racha        Racha      @relation(fields: [rachaId], references: [id])
  usuario      Usuario    @relation(fields: [usuarioId], references: [id])

  @@unique([influencerId, usuarioId, rachaId])
  @@index([influencerId])
  @@index([usuarioId])
  @@index([rachaId])
  @@index([status])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      Usuario  @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([expiresAt])
}

enum Role {
  SUPERADMIN
  PRESIDENTE
  ADMIN
  VICEPRESIDENTE
  DIRETORFUTEBOL
  DIRETORFINANCEIRO
  LEITOR
  ATLETA
}

enum RachaStatus {
  ATIVO
  INATIVO
  TRIAL
  BLOQUEADO
  INADIMPLENTE
}

name: Web PR3 CI

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'next.config.*'
      - 'tsconfig.json'
      - '.eslintrc.*'
      - 'eslint.config.*'

env:
  NODE_VERSION: '20'

jobs:
  # Job de verificações estáticas (sempre roda em PR)
  static-checks:
    name: Static Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint (allow warnings)
        run: npm run lint
        continue-on-error: true

      - name: Run TypeScript check (non-blocking)
        run: npm run typecheck
        continue-on-error: true

  # Job de build (só roda quando NÃO for Draft)
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    needs: [static-checks]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client (if exists)
        run: |
          if [ -f "prisma/schema.prisma" ]; then
            npx prisma generate
          else
            echo "No Prisma schema found, skipping generate"
          fi
        continue-on-error: true

      - name: Setup environment variables
        run: |
          echo "NEXTAUTH_URL=https://staging.fut7pro.com" >> .env.local
          echo "NEXTAUTH_SECRET=dummy-secret-for-ci" >> .env.local
          echo "DATABASE_URL=postgresql://dummy:dummy@localhost:5432/dummy" >> .env.local
          echo "NEXT_PUBLIC_API_URL=https://api-staging.fut7pro.com" >> .env.local
          echo "NEXT_PUBLIC_APP_URL=https://staging.fut7pro.com" >> .env.local

      - name: Build application
        run: npm run build
        continue-on-error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # Job de notificação
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [static-checks, build]
    if: always()
    
    steps:
      - name: Check results
        run: |
          echo "Static checks: ${{ needs.static-checks.result }}"
          echo "Build: ${{ needs.build.result }}"
          
          if [ "${{ needs.static-checks.result }}" = "success" ]; then
            echo "✅ Static checks passed"
          else
            echo "⚠️ Static checks had warnings/errors"
          fi
          
          if [ "${{ needs.build.result }}" = "success" ]; then
            echo "✅ Build passed"
          elif [ "${{ needs.build.result }}" = "skipped" ]; then
            echo "⏭️ Build skipped (Draft PR)"
          else
            echo "❌ Build failed (runtime errors - see P1 issues)"
          fi

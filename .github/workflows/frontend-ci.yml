name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # Job de qualidade de código
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run Prettier check
        run: npm run format:check

  # Job de testes
  test:
    name: Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()

  # Job de build
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [quality, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_API_URL=https://api-staging.fut7pro.com" >> .env.local
          echo "NEXT_PUBLIC_APP_URL=https://staging.fut7pro.com" >> .env.local

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # Job de análise de bundle
  analyze:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_API_URL=https://api-staging.fut7pro.com" >> .env.local

      - name: Analyze bundle
        run: npm run analyze

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze/
          retention-days: 7

  # Job de segurança
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Job de deploy preview (apenas para PRs)
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [quality, test, build]
    if: github.event_name == 'pull_request'
    environment: preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cp .env.example .env.local
          echo "NEXT_PUBLIC_API_URL=https://api-staging.fut7pro.com" >> .env.local
          echo "NEXT_PUBLIC_APP_URL=https://staging.fut7pro.com" >> .env.local

      - name: Build for preview
        run: npm run build

      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Job de notificação
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quality, test, build, security]
    if: always()
    
    steps:
      - name: Notify Slack on failure
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: failure
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: '❌ Frontend CI/CD failed for ${{ github.repository }}#${{ github.run_number }}'
          channel: '#devops'
          username: 'GitHub Actions'

      - name: Notify Slack on success
        uses: 8398a7/action-slack@v3
        if: success()
        with:
          status: success
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: '✅ Frontend CI/CD passed for ${{ github.repository }}#${{ github.run_number }}'
          channel: '#devops'
          username: 'GitHub Actions'
